#!/usr/bin/env node

const fs = require('fs')
const { promisify } = require('util')
const read = promisify(fs.readFile)
const write = promisify(fs.writeFile)
const { hexToArrayBuffer } = require('./utils')

main()

async function main() {
  const [
    ,
    ,
    inputFilename,
    outputFilename = `${inputFilename}.encoded`,
  ] = process.argv
  console.log(`${inputFilename} -> ${outputFilename}`)
  console.log(`reading...`)
  const data = await read(inputFilename)
  console.log('encoding...')
  const addresses = data
    .toString()
    .trim()
    .split('\n')
  const { length } = addresses
  const xs = new Uint8Array(length * 20)
  for (let i = 0; i < length; i++) {
    xs.set(new Uint8Array(hexToArrayBuffer(addresses[i])), i * 20)
  }
  console.log(`writing...`)
  await write(outputFilename, new Buffer(xs.buffer))
  console.log('done! âœ¨')
}
