{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/js-sha3/src/sha3.js","utils.js","merkleWorker.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","sleep","promisify","hashParent","verifyProof","hexToArrayBuffer","arrayBufferToHex","sortArrayBuffers","mergeArrayBuffers","mergeAllArrayBuffers","arrayBufferEqualTo","createMerkleTree","getMerkleRoot","getMerkleProof","indexOfArrayBuffer","prop","o","k","ms","Promise","resolve","f","reject","err","res","hashLeaf","keccak256","buffer","a","b","input","proof","root","c","addr","xs","Uint8Array","hex","match","parseInt","buf","toString","padStart","xBuf","yBuf","byteLength","ys","x","y","xLen","yLen","set","bufs","totalBytes","buf0","buf1","onProgress","tree","addrLen","hasProgressCallback","slice","n","branch","prog","lastProg","currProg","Math","ceil","nextBranch","branchProg","rootBranch","proofs","idx","pairIdx","leaf","floor","ArrayBuffer","found","self","onmessage","onMessage","console","log","PROOFS","Map","INPUT","TREE","msg","data","JSON","parse","type","value","get","index","error","postMessage","stringify","rootHex"],"mappings":"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","file":"merkleWorker.min.map","sourceRoot":"","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n  'use strict';\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = global;\r\n  }\r\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\r\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\r\n  var PADDING = [6, 1536, 393216, 100663296];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\r\n            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\r\n            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\r\n            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\r\n            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\r\n  var BITS = [224, 256, 384, 512];\r\n  var SHAKE_BITS = [128, 256];\r\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\r\n\r\n  var createOutputMethod = function (bits, padding, outputType) {\r\n    return function (message) {\r\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createShakeOutputMethod = function (bits, padding, outputType) {\r\n    return function (message, outputBits) {\r\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createMethod = function (bits, padding) {\r\n    var method = createOutputMethod(bits, padding, 'hex');\r\n    method.create = function () {\r\n      return new Keccak(bits, padding, bits);\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var createShakeMethod = function (bits, padding) {\r\n    var method = createShakeOutputMethod(bits, padding, 'hex');\r\n    method.create = function (outputBits) {\r\n      return new Keccak(bits, padding, outputBits);\r\n    };\r\n    method.update = function (message, outputBits) {\r\n      return method.create(outputBits).update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createShakeOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var algorithms = [\r\n    {name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod}\r\n  ];\r\n\r\n  var methods = {}, methodNames = [];\r\n\r\n  for (var i = 0; i < algorithms.length; ++i) {\r\n    var algorithm = algorithms[i];\r\n    var bits  = algorithm.bits;\r\n    for (var j = 0; j < bits.length; ++j) {\r\n      var methodName = algorithm.name +'_' + bits[j];\r\n      methodNames.push(methodName);\r\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\r\n    }\r\n  }\r\n\r\n  function Keccak(bits, padding, outputBits) {\r\n    this.blocks = [];\r\n    this.s = [];\r\n    this.padding = padding;\r\n    this.outputBits = outputBits;\r\n    this.reset = true;\r\n    this.block = 0;\r\n    this.start = 0;\r\n    this.blockCount = (1600 - (bits << 1)) >> 5;\r\n    this.byteCount = this.blockCount << 2;\r\n    this.outputBlocks = outputBits >> 5;\r\n    this.extraBytes = (outputBits & 31) >> 3;\r\n\r\n    for (var i = 0; i < 50; ++i) {\r\n      this.s[i] = 0;\r\n    }\r\n  }\r\n\r\n  Keccak.prototype.update = function (message) {\r\n    var notString = typeof message !== 'string';\r\n    if (notString && message.constructor === ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n    var length = message.length, blocks = this.blocks, byteCount = this.byteCount,\r\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\r\n\r\n    while (index < length) {\r\n      if (this.reset) {\r\n        this.reset = false;\r\n        blocks[0] = this.block;\r\n        for (i = 1; i < blockCount + 1; ++i) {\r\n          blocks[i] = 0;\r\n        }\r\n      }\r\n      if (notString) {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n        }\r\n      } else {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          code = message.charCodeAt(index);\r\n          if (code < 0x80) {\r\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n          } else if (code < 0x800) {\r\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else if (code < 0xd800 || code >= 0xe000) {\r\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else {\r\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      if (i >= byteCount) {\r\n        this.start = i - byteCount;\r\n        this.block = blocks[blockCount];\r\n        for (i = 0; i < blockCount; ++i) {\r\n          s[i] ^= blocks[i];\r\n        }\r\n        f(s);\r\n        this.reset = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Keccak.prototype.finalize = function () {\r\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\r\n    blocks[i >> 2] |= this.padding[i & 3];\r\n    if (this.lastByteIndex === this.byteCount) {\r\n      blocks[0] = blocks[blockCount];\r\n      for (i = 1; i < blockCount + 1; ++i) {\r\n        blocks[i] = 0;\r\n      }\r\n    }\r\n    blocks[blockCount - 1] |= 0x80000000;\r\n    for (i = 0; i < blockCount; ++i) {\r\n      s[i] ^= blocks[i];\r\n    }\r\n    f(s);\r\n  };\r\n\r\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var hex = '', block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        block = s[i];\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\r\n               HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\r\n               HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\r\n               HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n        i = 0;\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\r\n      }\r\n      if (extraBytes > 1) {\r\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\r\n      }\r\n      if (extraBytes > 2) {\r\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\r\n      }\r\n    }\r\n    return hex;\r\n  };\r\n\r\n  Keccak.prototype.arrayBuffer = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var bytes = this.outputBits >> 3;\r\n    var buffer;\r\n    if (extraBytes) {\r\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\r\n    } else {\r\n      buffer = new ArrayBuffer(bytes);\r\n    }\r\n    var array = new Uint32Array(buffer);\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        array[j] = s[i];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      array[i] = s[i];\r\n      buffer = buffer.slice(0, bytes);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\r\n\r\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var array = [], offset, block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        offset = j << 2;\r\n        block = s[i];\r\n        array[offset] = block & 0xFF;\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n        array[offset + 3] = (block >> 24) & 0xFF;\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      offset = j << 2;\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        array[offset] = block & 0xFF;\r\n      }\r\n      if (extraBytes > 1) {\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n      }\r\n      if (extraBytes > 2) {\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  var f = function (s) {\r\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\r\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\r\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\r\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\r\n    for (n = 0; n < 48; n += 2) {\r\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\r\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\r\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\r\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\r\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\r\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\r\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\r\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\r\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\r\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\r\n\r\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\r\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\r\n      s[0] ^= h;\r\n      s[1] ^= l;\r\n      s[10] ^= h;\r\n      s[11] ^= l;\r\n      s[20] ^= h;\r\n      s[21] ^= l;\r\n      s[30] ^= h;\r\n      s[31] ^= l;\r\n      s[40] ^= h;\r\n      s[41] ^= l;\r\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\r\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\r\n      s[2] ^= h;\r\n      s[3] ^= l;\r\n      s[12] ^= h;\r\n      s[13] ^= l;\r\n      s[22] ^= h;\r\n      s[23] ^= l;\r\n      s[32] ^= h;\r\n      s[33] ^= l;\r\n      s[42] ^= h;\r\n      s[43] ^= l;\r\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\r\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\r\n      s[4] ^= h;\r\n      s[5] ^= l;\r\n      s[14] ^= h;\r\n      s[15] ^= l;\r\n      s[24] ^= h;\r\n      s[25] ^= l;\r\n      s[34] ^= h;\r\n      s[35] ^= l;\r\n      s[44] ^= h;\r\n      s[45] ^= l;\r\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\r\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\r\n      s[6] ^= h;\r\n      s[7] ^= l;\r\n      s[16] ^= h;\r\n      s[17] ^= l;\r\n      s[26] ^= h;\r\n      s[27] ^= l;\r\n      s[36] ^= h;\r\n      s[37] ^= l;\r\n      s[46] ^= h;\r\n      s[47] ^= l;\r\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\r\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\r\n      s[8] ^= h;\r\n      s[9] ^= l;\r\n      s[18] ^= h;\r\n      s[19] ^= l;\r\n      s[28] ^= h;\r\n      s[29] ^= l;\r\n      s[38] ^= h;\r\n      s[39] ^= l;\r\n      s[48] ^= h;\r\n      s[49] ^= l;\r\n\r\n      b0 = s[0];\r\n      b1 = s[1];\r\n      b32 = (s[11] << 4) | (s[10] >>> 28);\r\n      b33 = (s[10] << 4) | (s[11] >>> 28);\r\n      b14 = (s[20] << 3) | (s[21] >>> 29);\r\n      b15 = (s[21] << 3) | (s[20] >>> 29);\r\n      b46 = (s[31] << 9) | (s[30] >>> 23);\r\n      b47 = (s[30] << 9) | (s[31] >>> 23);\r\n      b28 = (s[40] << 18) | (s[41] >>> 14);\r\n      b29 = (s[41] << 18) | (s[40] >>> 14);\r\n      b20 = (s[2] << 1) | (s[3] >>> 31);\r\n      b21 = (s[3] << 1) | (s[2] >>> 31);\r\n      b2 = (s[13] << 12) | (s[12] >>> 20);\r\n      b3 = (s[12] << 12) | (s[13] >>> 20);\r\n      b34 = (s[22] << 10) | (s[23] >>> 22);\r\n      b35 = (s[23] << 10) | (s[22] >>> 22);\r\n      b16 = (s[33] << 13) | (s[32] >>> 19);\r\n      b17 = (s[32] << 13) | (s[33] >>> 19);\r\n      b48 = (s[42] << 2) | (s[43] >>> 30);\r\n      b49 = (s[43] << 2) | (s[42] >>> 30);\r\n      b40 = (s[5] << 30) | (s[4] >>> 2);\r\n      b41 = (s[4] << 30) | (s[5] >>> 2);\r\n      b22 = (s[14] << 6) | (s[15] >>> 26);\r\n      b23 = (s[15] << 6) | (s[14] >>> 26);\r\n      b4 = (s[25] << 11) | (s[24] >>> 21);\r\n      b5 = (s[24] << 11) | (s[25] >>> 21);\r\n      b36 = (s[34] << 15) | (s[35] >>> 17);\r\n      b37 = (s[35] << 15) | (s[34] >>> 17);\r\n      b18 = (s[45] << 29) | (s[44] >>> 3);\r\n      b19 = (s[44] << 29) | (s[45] >>> 3);\r\n      b10 = (s[6] << 28) | (s[7] >>> 4);\r\n      b11 = (s[7] << 28) | (s[6] >>> 4);\r\n      b42 = (s[17] << 23) | (s[16] >>> 9);\r\n      b43 = (s[16] << 23) | (s[17] >>> 9);\r\n      b24 = (s[26] << 25) | (s[27] >>> 7);\r\n      b25 = (s[27] << 25) | (s[26] >>> 7);\r\n      b6 = (s[36] << 21) | (s[37] >>> 11);\r\n      b7 = (s[37] << 21) | (s[36] >>> 11);\r\n      b38 = (s[47] << 24) | (s[46] >>> 8);\r\n      b39 = (s[46] << 24) | (s[47] >>> 8);\r\n      b30 = (s[8] << 27) | (s[9] >>> 5);\r\n      b31 = (s[9] << 27) | (s[8] >>> 5);\r\n      b12 = (s[18] << 20) | (s[19] >>> 12);\r\n      b13 = (s[19] << 20) | (s[18] >>> 12);\r\n      b44 = (s[29] << 7) | (s[28] >>> 25);\r\n      b45 = (s[28] << 7) | (s[29] >>> 25);\r\n      b26 = (s[38] << 8) | (s[39] >>> 24);\r\n      b27 = (s[39] << 8) | (s[38] >>> 24);\r\n      b8 = (s[48] << 14) | (s[49] >>> 18);\r\n      b9 = (s[49] << 14) | (s[48] >>> 18);\r\n\r\n      s[0] = b0 ^ (~b2 & b4);\r\n      s[1] = b1 ^ (~b3 & b5);\r\n      s[10] = b10 ^ (~b12 & b14);\r\n      s[11] = b11 ^ (~b13 & b15);\r\n      s[20] = b20 ^ (~b22 & b24);\r\n      s[21] = b21 ^ (~b23 & b25);\r\n      s[30] = b30 ^ (~b32 & b34);\r\n      s[31] = b31 ^ (~b33 & b35);\r\n      s[40] = b40 ^ (~b42 & b44);\r\n      s[41] = b41 ^ (~b43 & b45);\r\n      s[2] = b2 ^ (~b4 & b6);\r\n      s[3] = b3 ^ (~b5 & b7);\r\n      s[12] = b12 ^ (~b14 & b16);\r\n      s[13] = b13 ^ (~b15 & b17);\r\n      s[22] = b22 ^ (~b24 & b26);\r\n      s[23] = b23 ^ (~b25 & b27);\r\n      s[32] = b32 ^ (~b34 & b36);\r\n      s[33] = b33 ^ (~b35 & b37);\r\n      s[42] = b42 ^ (~b44 & b46);\r\n      s[43] = b43 ^ (~b45 & b47);\r\n      s[4] = b4 ^ (~b6 & b8);\r\n      s[5] = b5 ^ (~b7 & b9);\r\n      s[14] = b14 ^ (~b16 & b18);\r\n      s[15] = b15 ^ (~b17 & b19);\r\n      s[24] = b24 ^ (~b26 & b28);\r\n      s[25] = b25 ^ (~b27 & b29);\r\n      s[34] = b34 ^ (~b36 & b38);\r\n      s[35] = b35 ^ (~b37 & b39);\r\n      s[44] = b44 ^ (~b46 & b48);\r\n      s[45] = b45 ^ (~b47 & b49);\r\n      s[6] = b6 ^ (~b8 & b0);\r\n      s[7] = b7 ^ (~b9 & b1);\r\n      s[16] = b16 ^ (~b18 & b10);\r\n      s[17] = b17 ^ (~b19 & b11);\r\n      s[26] = b26 ^ (~b28 & b20);\r\n      s[27] = b27 ^ (~b29 & b21);\r\n      s[36] = b36 ^ (~b38 & b30);\r\n      s[37] = b37 ^ (~b39 & b31);\r\n      s[46] = b46 ^ (~b48 & b40);\r\n      s[47] = b47 ^ (~b49 & b41);\r\n      s[8] = b8 ^ (~b0 & b2);\r\n      s[9] = b9 ^ (~b1 & b3);\r\n      s[18] = b18 ^ (~b10 & b12);\r\n      s[19] = b19 ^ (~b11 & b13);\r\n      s[28] = b28 ^ (~b20 & b22);\r\n      s[29] = b29 ^ (~b21 & b23);\r\n      s[38] = b38 ^ (~b30 & b32);\r\n      s[39] = b39 ^ (~b31 & b33);\r\n      s[48] = b48 ^ (~b40 & b42);\r\n      s[49] = b49 ^ (~b41 & b43);\r\n\r\n      s[0] ^= RC[n];\r\n      s[1] ^= RC[n + 1];\r\n    }\r\n  };\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = methods;\r\n  } else {\r\n    for (var i = 0; i < methodNames.length; ++i) {\r\n      root[methodNames[i]] = methods[methodNames[i]];\r\n    }\r\n  }\r\n})();\r\n","import { keccak_256 as keccak256 } from 'js-sha3'\n\nexport const prop = k => o => o[k]\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function promisify(f) {\n  return (...args) =>\n    new Promise((resolve, reject) => {\n      f(...args, (err, res) => {\n        if (err) return reject(err)\n        resolve(res)\n      })\n    })\n}\n\nexport const hashLeaf = keccak256.buffer\n\nexport function hashParent(a: ArrayBuffer, b: ArrayBuffer): ArrayBuffer {\n  return hashLeaf(\n    sortArrayBuffers(a, b) === 1\n      ? // b < a\n        mergeArrayBuffers(b, a)\n      : // a < b || a ===\n        mergeArrayBuffers(a, b),\n  )\n}\n\nexport function verifyProof(\n  /** a */\n  input: ArrayBuffer,\n  /** hashLeaf(b) */\n  proof: ArrayBuffer,\n  /** hashParent(a, b) */\n  root: ArrayBuffer,\n): boolean {\n  const a = hashLeaf(input)\n  const b = proof\n  const c =\n    sortArrayBuffers(a, b) === 1\n      ? mergeArrayBuffers(b, a)\n      : mergeArrayBuffers(a, b)\n  // hash([hash(A), proof].sort(pairwise)) === root\n  return arrayBufferEqualTo(hashLeaf(c), root)\n}\n\nexport function hexToArrayBuffer(addr: string): ArrayBuffer {\n  const len = (addr.length / 2) | 0\n  const xs = new Uint8Array(len)\n  const hex = addr.match(/.{2}/g)\n  for (let i = 0; i < len; i++) {\n    xs[i] = parseInt(hex[i], 16)\n  }\n  return xs.buffer\n}\n\nexport function arrayBufferToHex(buf: ArrayBuffer): string {\n  const xs = new Uint8Array(buf)\n  const { length } = xs\n  let addr = ''\n  for (let i = 0; i < length; i++) {\n    addr += xs[i].toString(16).padStart(2, '0')\n  }\n  return addr\n}\n\nexport function sortArrayBuffers(xBuf: ArrayBuffer, yBuf: ArrayBuffer): number {\n  const { byteLength } = xBuf\n  const xs = new Uint8Array(xBuf)\n  const ys = new Uint8Array(yBuf)\n  let x, y\n  for (let i = 0; i < byteLength; i++) {\n    x = xs[i]\n    y = ys[i]\n    if (x < y) return -1 // xBuf, yBuf\n    if (x > y) return 1 // yBuf, xBuf\n  }\n  return 0\n}\n\nexport function mergeArrayBuffers(\n  xBuf: ArrayBuffer,\n  yBuf: ArrayBuffer,\n): ArrayBuffer {\n  const xLen = xBuf.byteLength\n  const yLen = yBuf.byteLength\n  const xs = new Uint8Array(xLen + yLen)\n  xs.set(new Uint8Array(xBuf), 0)\n  xs.set(new Uint8Array(yBuf), xLen)\n  return xs.buffer\n}\n\nexport function mergeAllArrayBuffers(...bufs: ArrayBuffer[]): ArrayBuffer {\n  const { byteLength } = bufs[0]\n  const { length } = bufs\n  const totalBytes = byteLength * length\n  const xs = new Uint8Array(totalBytes)\n  for (let i = 0; i < length; i++) {\n    xs.set(new Uint8Array(bufs[i]), i * byteLength)\n  }\n  return xs.buffer\n}\n\nexport function arrayBufferEqualTo(buf0, buf1) {\n  const { byteLength } = buf0\n  if (buf0.byteLength !== buf1.byteLength) return false\n  const a = new Uint8Array(buf0)\n  const b = new Uint8Array(buf1)\n  for (let i = 0; i < byteLength; i++) {\n    if (a[i] !== b[i]) return false\n  }\n  return true\n}\n\nexport function createMerkleTree(\n  input: ArrayBuffer,\n  onProgress: number => void,\n): ArrayBuffer[][] {\n  const tree: ArrayBuffer[][] = [[]]\n  // create outmost branch\n  const addrLen = 20\n  const hasProgressCallback = !!onProgress\n  const { byteLength } = input\n  const len = (byteLength / addrLen) | 0\n  // const totalBranches = Math.log2(len)\n  const xs = new Uint8Array(input)\n  for (let i = 0; i < len; i++) {\n    const a = i * addrLen\n    const b = a + 20\n    const buf = xs.slice(a, b).buffer\n    tree[0][i] = hashLeaf(buf)\n  }\n  let n = 0\n  let [branch] = tree\n  let prog = 1\n  let lastProg = 0\n  let currProg = 0\n  if (hasProgressCallback) onProgress(1 - prog)\n  while (branch.length > 1) {\n    const { length } = branch\n    const len = Math.ceil(length / 2)\n    const nextBranch = (tree[n + 1] = [])\n    const branchProg = prog / 2\n    for (let i = 0; i < len; i++) {\n      const n = i * 2\n      const a = branch[n]\n      const b = branch[n + 1]\n      if (!a || !b) {\n        nextBranch[i] = a || b\n      } else {\n        nextBranch[i] = hashParent(a, b)\n      }\n      if (hasProgressCallback) {\n        prog -= branchProg / len\n        currProg = 1 - prog\n        if (currProg - lastProg > 0.01) {\n          // console.log('1% additional progress!')\n          onProgress(currProg)\n          lastProg = currProg\n        }\n      }\n    }\n    branch = tree[++n]\n  }\n  if (hasProgressCallback && prog !== 0) onProgress(1)\n  return tree\n}\n\nexport function getMerkleRoot(tree: ArrayBuffer[][]): ArrayBuffer {\n  const rootBranch = tree[tree.length - 1]\n  const root = rootBranch[rootBranch.length - 1]\n  return root\n}\n\nexport function getMerkleProof(tree: ArrayBuffer[][], n: number): ArrayBuffer {\n  const len = tree.length - 1\n  const proofs = []\n  let idx = n\n  for (let i = 0; i < len; i++) {\n    const branch = tree[i]\n    const { length } = branch\n    const pairIdx = idx % 2 === 0 ? idx + 1 : idx - 1\n    const leaf = branch[pairIdx]\n    if (leaf) proofs.push(leaf)\n    idx = Math.floor(idx / 2)\n  }\n  // console.log(proofs.map(arrayBufferToHex))\n  const { length } = proofs\n  const proof = new ArrayBuffer(32 * length)\n  const xs = new Uint8Array(proof)\n  for (let i = 0; i < length; i++) {\n    xs.set(new Uint8Array(proofs[i]), i * 32)\n  }\n  return proof\n}\n\nexport function indexOfArrayBuffer(\n  tree: ArrayBuffer[][],\n  addr: ArrayBuffer,\n): number {\n  const leaf = hashLeaf(addr)\n  const [branch] = tree\n  const { length } = branch\n  for (let i = 0; i < length; i++) {\n    const found = arrayBufferEqualTo(leaf, branch[i])\n    if (found) return i\n  }\n  throw new Error(`Could not find leaf in tree`)\n}\n","import {\n  createMerkleTree,\n  getMerkleRoot,\n  getMerkleProof,\n  hashLeaf,\n  hexToArrayBuffer,\n  indexOfArrayBuffer,\n  arrayBufferToHex,\n} from './utils'\n\nself.onmessage = onMessage\n\nconsole.log('merkleWorker is initialized!')\n\nconst PROOFS = new Map()\nlet INPUT, TREE\nfunction onMessage(msg) {\n  const data = typeof msg.data === 'string' ? JSON.parse(msg.data) : msg.data\n  console.log(data)\n  switch (data.type) {\n    case 'proof': {\n      console.log('got proof request', data.value)\n      let proof = PROOFS.get(data.value)\n      if (!proof) {\n        const addr = hexToArrayBuffer(data.value)\n        try {\n          const index = indexOfArrayBuffer(TREE, addr)\n          console.log('found at index', index)\n          proof = getMerkleProof(TREE, index)\n        } catch (err) {\n          console.error(err)\n          proof = new ArrayBuffer(0)\n        } finally {\n          PROOFS.set(data.value, proof)\n        }\n      }\n      self.postMessage({\n        type: 'proof',\n        value: arrayBufferToHex(proof),\n      })\n      console.log('done! ✨')\n      break\n    }\n    default: {\n      console.log('got input buffer', msg.data)\n      console.log('constructing merkle tree...')\n      INPUT = msg.data\n      TREE = createMerkleTree(INPUT, x => {\n        self.postMessage(\n          JSON.stringify({\n            type: 'progress',\n            value: x,\n          }),\n        )\n      })\n      const root = getMerkleRoot(TREE)\n      const rootHex = arrayBufferToHex(root)\n      console.log('done! ✨')\n      self.postMessage({\n        type: 'root',\n        value: rootHex,\n      })\n    }\n  }\n}\n"]}